{"version":3,"file":"reactivity.cjs.js","sources":["../../shared/src/index.ts","../src/effect.ts","../src/proxyHandlers.ts","../src/reactive.ts"],"sourcesContent":["/**\n *  判断是否是对象类型（数组，普通对象等）\n */\nexport const isObject = function (value: any) {\n  return typeof value === 'object' && value !== null\n}\n","let uid = 0\nlet activeEffect: (...args: any[]) => any\nconst reactiveEffectStack: Array<(...args: any[]) => any> = []\n/**\n * effect的实现目标：做到能够让函数fn里头的数据变化了，这整个函数就能够重新执行\n * 就好像函数fn是活的，一直在监听着自己里头的属性变化一样。\n */\nfunction createReactiveEffect(\n  fn: (...args: any[]) => any,\n  options: Record<string, any> = {}\n): (...args: any[]) => any {\n  /**\n   * 直接activeEffect= reactiveEffect的弊端\n   * 万一用户，按如下这么写\n   * effect(() => {\n   *   console.log(state.name) -> 此时activeEffect是reactiveEffect.uid 是0\n   *   effect(() => {\n   *     console.log(state.age) -> 此时activeEffect是reactiveEffect.uid 是1\n   *   })\n   *   console.log(state.school) -> 此时activeEffect是reactiveEffect.uid 是1\n   * })\n   * 我们发现在同一个外层作用域activeEffect变了。从uid0变成uid1的reactiveEffect\n   * 那么一个作用域两个不同的reactiveEffect，最终函数执行逻辑就不同了。\n   * 而我们想要的是跑到外层的时候，activeEffect回到uid0的reactiveEffect\n   * 因此我们需要使用一个栈结构去解决这个问题\n   */\n  const reactiveEffect = function () {\n    if (!reactiveEffectStack.includes(reactiveEffect)) {\n      // 保证reactiveEffect没有加入reactiveEffectStack\n      // 因为用户可能使用effect(() => { state.index ++ })\n      // 用户用了++,就不断触发这个函数了，为了防止这一点，需要先判断一下\n      let result\n      try {\n        reactiveEffectStack.push(reactiveEffect)\n        activeEffect = reactiveEffectStack[reactiveEffectStack.length - 1]\n        result = fn() // 这传入effect的函数里头大部分时候都是会取值，一旦取值了，就会触发proxy handler的get方法\n      } finally {\n        reactiveEffectStack.pop()\n        activeEffect = reactiveEffectStack[reactiveEffectStack.length - 1]\n      }\n      return result\n    }\n  }\n  reactiveEffect.uid = uid++ // 给本次创建的reactiveEffect函数一个唯一序号，用于区分不同的reactiveEffect函数\n  reactiveEffect._isEffect = true // 同时需要给创建reactiveEffect一个标志，知道这就是一个reactiveEffect函数\n  reactiveEffect.raw = fn // 同时还要知道一个reactiveEffect对应的原始响应函数是谁，是fn\n  reactiveEffect.options = options // 同时再接着把传入effect中的用户对effect配置保存，便于之后使用\n  return reactiveEffect\n}\n\n/**\n *  key: { name: jaylen }\n *  value: Map\n *    -- key : name\n *    -- value: Set = [reactiveEffect, reactiveEffect]\n */\nconst targetMap = new WeakMap()\n/**\n * 收集依赖\n * collectDependency的实现目标：让对象中的某个属性，收集它对应的reactiveEffect函数，这个值放在了activeEffect\n * */\nexport function collectDependency(\n  target: Record<string | number, any>,\n  key: string | number\n) {\n  if (!activeEffect) {\n    //说明此属性key不需要收集，因为压根没在effect中用，直接返回即可\n    return\n  }\n\n  /** WeakMap {\n   *    key: { name: jaylen }\n   *    value: Map { // dependenciesMap\n   *      key : name\n   *      value:\n   *     }\n   * }\n   */\n  let dependenciesMap = targetMap.get(target)\n  if (!dependenciesMap) {\n    dependenciesMap = new Map()\n    targetMap.set(target, dependenciesMap)\n  }\n\n  /**\n   * Set [reactiveEffect, reactiveEffect]\n   */\n  let reactiveEffectsSet = dependenciesMap.get(key)\n  if (!reactiveEffectsSet) {\n    reactiveEffectsSet = new Set()\n    dependenciesMap.set(key, reactiveEffectsSet)\n  }\n\n  if (!reactiveEffectsSet.has(activeEffect)) {\n    reactiveEffectsSet.add(activeEffect)\n  }\n\n  console.log('TargetMap', targetMap)\n}\n\nexport function effect(fn: (...args: any[]) => any, options: Record<string, any> = {}) {\n  const reactiveEffect = createReactiveEffect(fn, options)\n\n  if (!options.lazy) {\n    // 如果说，配置当中用户对lazy属性的值传入false或者压根没传这个lazy的话，也就是没有告诉Vue需要懒执行的话\n    reactiveEffect() // 那么，响应式的effect，默认地，是会先执行一次的。其实就是立即执行一次fn\n  }\n\n  return reactiveEffect\n}\n","import { isObject } from './../../shared/src/index'\nimport { collectDependency } from './effect'\n/**\n * 实现new Proxy(target, handlers)中的handlers\n * 如果是只读的（readonly），set应该报错\n * 是否深度的\n */\n\nimport { reactive, readonly } from './reactive'\n\nfunction createGetter({\n  isReadonly,\n  isShallow\n}: {\n  isReadonly: boolean\n  isShallow: boolean\n}) {\n  return function get(\n    target: Record<string | number, any>,\n    key: string | number,\n    receiver: any\n  ) {\n    const value = Reflect.get(target, key, receiver)\n\n    if (!isReadonly) {\n      // 如果这个对象不是只读的，那么在经过代理的时候就要进行依赖收集\n      // 等会儿数据变化的时候，就需要对视图View进行更新了\n      // ⚠️：如果是只读的，没必要收集依赖。收集了，你是只读的也没法改变属性，没法改变属性你收集依赖的作用就失去了\n      // 因为收集依赖的目的就是为了属性改变之后触发effect重新更新视图\n      console.log('执行effect时会取值，然后收集依赖')\n      collectDependency(target, key)\n    }\n\n    if (isShallow) {\n      return value\n    }\n    if (isObject(value)) {\n      // vue3跟vue2不同，vue3是取值的时候才进行深度代理判断\n      // 而vue2是在reactive的时候就继续判断深度代理。二者不太相同，换句话说vue3可以说是懒代理\n      return isReadonly ? readonly(value) : reactive(value)\n    }\n\n    return value\n  }\n}\n\nfunction createSetter({\n  isReadonly,\n  isShallow\n}: {\n  isReadonly: boolean\n  isShallow: boolean\n}) {\n  return function set(\n    target: Record<string | number, any>,\n    key: string | number,\n    value: any,\n    receiver: any\n  ) {\n    if (isReadonly) return console.warn(`${JSON.stringify(target)} is readonly`)\n    Reflect.set(target, key, value, receiver)\n  }\n}\n\nconst mutableHandlers = {\n  get: createGetter({\n    isReadonly: false,\n    isShallow: false\n  }),\n  set: createSetter({\n    isReadonly: false,\n    isShallow: false\n  })\n}\n\nconst shallowReactiveHandlers = {\n  get: createGetter({\n    isReadonly: false,\n    isShallow: true\n  }),\n  set: createSetter({\n    isReadonly: false,\n    isShallow: true\n  })\n}\n\nconst readonlyHandlers = {\n  get: createGetter({\n    isReadonly: true,\n    isShallow: false\n  }),\n  set: createSetter({\n    isReadonly: true,\n    isShallow: false\n  })\n}\n\nconst shallowReadonlyHandlers = {\n  get: createGetter({\n    isReadonly: true,\n    isShallow: true\n  }),\n  set: createSetter({\n    isReadonly: true,\n    isShallow: true\n  })\n}\n\nexport {\n  mutableHandlers,\n  shallowReactiveHandlers,\n  readonlyHandlers,\n  shallowReadonlyHandlers\n}\n","import { isObject } from '@vue/shared'\nimport {\n  mutableHandlers,\n  readonlyHandlers,\n  shallowReactiveHandlers,\n  shallowReadonlyHandlers\n} from './proxyHandlers'\n\n/**\n * 是不是响应的，是不是只读的\n */\n// 使用WeakMap会自动垃圾回收，它不会造成内存泄漏，而且存储的key只能是对象\nconst reactiveMap = new WeakMap()\nconst readonlyMap = new WeakMap()\n\nexport function createReactiveProxy(\n  target: Record<string | number, any>,\n  {\n    isReadonly,\n    proxyHandlers\n  }: { isReadonly: boolean; proxyHandlers: Record<string, Function> }\n) {\n  // 如果不是对象类型，是普通类型或者函数类型，直接返回target\n  if (!isObject(target)) return target\n  // 不过在进行proxy生成之前，要判断下这个对象是不是已经被代理了，不需要重复代理\n\n  // 判断要创建的是不是一个只读的代理，那如果是，需要使用只读map去缓存，或者取缓存\n  const proxyMap = isReadonly ? readonlyMap : reactiveMap\n\n  // 如果代理map中有缓存过这个target对应的代理，直接返回缓存\n  if (proxyMap.has(target)) {\n    /**\n     * 做缓存判断，是为了防止用户出现以下的操作\n     * const o = {}\n     * const obj = createReactiveProxy(o)\n     * const obj1 = createReactiveProxy(o)\n     * 即多次代理，多次代理一个对象，我们就判断如果缓存中有了，就直接给它返回缓存即可\n     * 不需要代理多次\n     */\n    return proxyMap.get(target)\n  }\n\n  // 否则创建一个代理\n  const proxy = new Proxy(target, proxyHandlers)\n  // 并且将被代理对象与代理之间建立map联系\n  proxyMap.set(target, proxy)\n\n  return proxy\n}\n\nexport function reactive(target: any) {\n  return createReactiveProxy(target, {\n    isReadonly: false,\n    proxyHandlers: mutableHandlers\n  })\n}\n\nexport function shallowReactive(target: any) {\n  return createReactiveProxy(target, {\n    isReadonly: false,\n    proxyHandlers: shallowReactiveHandlers\n  })\n}\n\nexport function readonly(target: any) {\n  return createReactiveProxy(target, {\n    isReadonly: true,\n    proxyHandlers: readonlyHandlers\n  })\n}\n\nexport function shallowReadonly(target: any) {\n  return createReactiveProxy(target, {\n    isReadonly: true,\n    proxyHandlers: shallowReadonlyHandlers\n  })\n}\n"],"names":[],"mappings":"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"}